{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nvar VideoPlayer = /** @class */function (_super) {\n  __extends(VideoPlayer, _super);\n  function VideoPlayer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  VideoPlayer.prototype.play = function (fileUrl, options) {\n    return cordova(this, \"play\", {}, arguments);\n  };\n  VideoPlayer.prototype.close = function () {\n    return cordova(this, \"close\", {\n      \"sync\": true\n    }, arguments);\n  };\n  VideoPlayer.pluginName = \"VideoPlayer\";\n  VideoPlayer.plugin = \"https://github.com/moust/cordova-plugin-videoplayer.git\";\n  VideoPlayer.pluginRef = \"VideoPlayer\";\n  VideoPlayer.repo = \"https://github.com/moust/cordova-plugin-videoplayer\";\n  VideoPlayer.platforms = [\"Android\"];\n  VideoPlayer.decorators = [{\n    type: Injectable\n  }];\n  return VideoPlayer;\n}(IonicNativePlugin);\nexport { VideoPlayer };","map":{"version":3,"names":["__extends","Injectable","IonicNativePlugin","cordova","VideoPlayer","_super","apply","arguments","prototype","play","fileUrl","options","close","pluginName","plugin","pluginRef","repo","platforms","decorators","type"],"sources":["/Users/daoduchuy/Learning Ionic/LoginCarmdDemo/node_modules/@ionic-native/video-player/ngx/index.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nvar VideoPlayer = /** @class */ (function (_super) {\n    __extends(VideoPlayer, _super);\n    function VideoPlayer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    VideoPlayer.prototype.play = function (fileUrl, options) { return cordova(this, \"play\", {}, arguments); };\n    VideoPlayer.prototype.close = function () { return cordova(this, \"close\", { \"sync\": true }, arguments); };\n    VideoPlayer.pluginName = \"VideoPlayer\";\n    VideoPlayer.plugin = \"https://github.com/moust/cordova-plugin-videoplayer.git\";\n    VideoPlayer.pluginRef = \"VideoPlayer\";\n    VideoPlayer.repo = \"https://github.com/moust/cordova-plugin-videoplayer\";\n    VideoPlayer.platforms = [\"Android\"];\n    VideoPlayer.decorators = [\n        { type: Injectable }\n    ];\n    return VideoPlayer;\n}(IonicNativePlugin));\nexport { VideoPlayer };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,iBAAiB,EAAEC,OAAO,QAAQ,oBAAoB;AAC/D,IAAIC,WAAW,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC/CL,SAAS,CAACI,WAAW,EAAEC,MAAM,CAAC;EAC9B,SAASD,WAAWA,CAAA,EAAG;IACnB,OAAOC,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;EACnE;EACAH,WAAW,CAACI,SAAS,CAACC,IAAI,GAAG,UAAUC,OAAO,EAAEC,OAAO,EAAE;IAAE,OAAOR,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,EAAEI,SAAS,CAAC;EAAE,CAAC;EACzGH,WAAW,CAACI,SAAS,CAACI,KAAK,GAAG,YAAY;IAAE,OAAOT,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE;MAAE,MAAM,EAAE;IAAK,CAAC,EAAEI,SAAS,CAAC;EAAE,CAAC;EACzGH,WAAW,CAACS,UAAU,GAAG,aAAa;EACtCT,WAAW,CAACU,MAAM,GAAG,yDAAyD;EAC9EV,WAAW,CAACW,SAAS,GAAG,aAAa;EACrCX,WAAW,CAACY,IAAI,GAAG,qDAAqD;EACxEZ,WAAW,CAACa,SAAS,GAAG,CAAC,SAAS,CAAC;EACnCb,WAAW,CAACc,UAAU,GAAG,CACrB;IAAEC,IAAI,EAAElB;EAAW,CAAC,CACvB;EACD,OAAOG,WAAW;AACtB,CAAC,CAACF,iBAAiB,CAAE;AACrB,SAASE,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}