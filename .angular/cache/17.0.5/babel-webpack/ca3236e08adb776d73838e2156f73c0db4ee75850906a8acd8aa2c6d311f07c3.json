{"ast":null,"code":"import _asyncToGenerator from \"/Users/daoduchuy/Learning Ionic/LoginCarmdDemo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginPage = class LoginPage {\n  constructor(route, router, http, storage, loadingCtrl) {\n    this.route = route;\n    this.router = router;\n    this.http = http;\n    this.storage = storage;\n    this.loadingCtrl = loadingCtrl;\n    this.emailVal = '';\n    this.passwordVal = '';\n    this.isDisable = false;\n    this.isRemember = false;\n  }\n  Login() {\n    this.GetUser();\n  }\n  showLoading() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const loading = yield _this.loadingCtrl.create({\n        message: 'Loading...',\n        duration: 3000,\n        spinner: 'circles'\n      });\n      loading.present();\n    })();\n  }\n  GetUser() {\n    if (this.emailVal == \"\" || this.passwordVal == \"\") {\n      alert(\"Please type Email and Password to Login!\");\n      return;\n    } else {\n      let headers = {\n        'Content-Type': 'application/json'\n      };\n      return this.http.post(\"https://dev-api-pro.repairsolutions.com/app1.0/api/users/login\", {\n        emailAddress: this.emailVal,\n        password: this.passwordVal\n      }, {\n        headers\n      }).toPromise().then(data => {\n        let person = data;\n        console.log(person);\n        if (person.message.code == 0) {\n          if (this.isRemember) {\n            this.storage.set(\"Users\", data).subscribe(users => {});\n            console.log(\"Done save data\");\n          }\n          // let navigationExtra: NavigationExtras = {\n          //   queryParams: {\n          //     special: JSON.stringify(person),\n          //   },\n          // };\n          this.emailVal = '';\n          this.passwordVal = '';\n          this.router.navigate(['/home']);\n        } else {\n          alert(\"Don't have data for this Email!\");\n        }\n      });\n    }\n  }\n};\nLoginPage = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss']\n})], LoginPage);\nexport { LoginPage };","map":{"version":3,"names":["Component","LoginPage","constructor","route","router","http","storage","loadingCtrl","emailVal","passwordVal","isDisable","isRemember","Login","GetUser","showLoading","_this","_asyncToGenerator","loading","create","message","duration","spinner","present","alert","headers","post","emailAddress","password","toPromise","then","data","person","console","log","code","set","subscribe","users","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/daoduchuy/Learning Ionic/LoginCarmdDemo/src/app/login/login.page.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { StorageMap } from '@ngx-pwa/local-storage';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage {\n\n  emailVal = ''\n  passwordVal = ''\n  isDisable = false\n  isRemember = false\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private http: HttpClient,\n    private storage : StorageMap,\n    private loadingCtrl: LoadingController\n  ) {}\n\n  Login() {\n    \n    this.GetUser()\n  }\n\n  async showLoading() {\n    const loading = await this.loadingCtrl.create({\n      message: 'Loading...',\n      duration: 3000,\n      spinner: 'circles',\n    });\n\n    loading.present();\n  }\n\n  GetUser() {\n    if (this.emailVal == \"\" || this.passwordVal == \"\"){\n      alert(\"Please type Email and Password to Login!\")\n      return \n    } else {\n      let headers = { 'Content-Type': 'application/json' };\n      return this.http\n        .post(\n          \"https://dev-api-pro.repairsolutions.com/app1.0/api/users/login\",\n          { emailAddress: this.emailVal, password: this.passwordVal },\n          { headers }\n        )\n        .toPromise()\n        .then((data: any) => {\n          let person: Person = data;\n          console.log(person);\n          if (person.message.code == 0) {\n            if (this.isRemember){\n              this.storage.set(\"Users\", data).subscribe((users) => {})\n              console.log(\"Done save data\")\n            }\n            // let navigationExtra: NavigationExtras = {\n            //   queryParams: {\n            //     special: JSON.stringify(person),\n            //   },\n            // };\n            this.emailVal = '';\n            this.passwordVal = '';\n            this.router.navigate(['/home']);\n          } else {\n            alert(\"Don't have data for this Email!\");\n          }\n        });\n    }\n  }\n}\n\n\nexport interface Person {\n  id: string\n  firstName: string\n  lastName: string\n  emailAddress: string\n  zipCode: string\n  address1: string\n  address2: string\n  city: string\n  state: string\n  imageUrl: string\n  language: string\n  token: string\n  message: Message\n}\nexport interface Message {\n  code: number\n  description: string\n}\n"],"mappings":";;AACA,SAASA,SAAS,QAA2B,eAAe;AASrD,IAAMC,SAAS,GAAf,MAAMA,SAAS;EAQpBC,YACUC,KAAqB,EACrBC,MAAc,EACdC,IAAgB,EAChBC,OAAoB,EACpBC,WAA8B;IAJ9B,KAAAJ,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,WAAW,GAAXA,WAAW;IAXrB,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAC,WAAW,GAAG,EAAE;IAChB,KAAAC,SAAS,GAAG,KAAK;IACjB,KAAAC,UAAU,GAAG,KAAK;EASf;EAEHC,KAAKA,CAAA;IAEH,IAAI,CAACC,OAAO,EAAE;EAChB;EAEMC,WAAWA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACf,MAAMC,OAAO,SAASF,KAAI,CAACR,WAAW,CAACW,MAAM,CAAC;QAC5CC,OAAO,EAAE,YAAY;QACrBC,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE;OACV,CAAC;MAEFJ,OAAO,CAACK,OAAO,EAAE;IAAC;EACpB;EAEAT,OAAOA,CAAA;IACL,IAAI,IAAI,CAACL,QAAQ,IAAI,EAAE,IAAI,IAAI,CAACC,WAAW,IAAI,EAAE,EAAC;MAChDc,KAAK,CAAC,0CAA0C,CAAC;MACjD;KACD,MAAM;MACL,IAAIC,OAAO,GAAG;QAAE,cAAc,EAAE;MAAkB,CAAE;MACpD,OAAO,IAAI,CAACnB,IAAI,CACboB,IAAI,CACH,gEAAgE,EAChE;QAAEC,YAAY,EAAE,IAAI,CAAClB,QAAQ;QAAEmB,QAAQ,EAAE,IAAI,CAAClB;MAAW,CAAE,EAC3D;QAAEe;MAAO,CAAE,CACZ,CACAI,SAAS,EAAE,CACXC,IAAI,CAAEC,IAAS,IAAI;QAClB,IAAIC,MAAM,GAAWD,IAAI;QACzBE,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;QACnB,IAAIA,MAAM,CAACZ,OAAO,CAACe,IAAI,IAAI,CAAC,EAAE;UAC5B,IAAI,IAAI,CAACvB,UAAU,EAAC;YAClB,IAAI,CAACL,OAAO,CAAC6B,GAAG,CAAC,OAAO,EAAEL,IAAI,CAAC,CAACM,SAAS,CAAEC,KAAK,IAAI,CAAE,CAAC,CAAC;YACxDL,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;;UAE/B;UACA;UACA;UACA;UACA;UACA,IAAI,CAACzB,QAAQ,GAAG,EAAE;UAClB,IAAI,CAACC,WAAW,GAAG,EAAE;UACrB,IAAI,CAACL,MAAM,CAACkC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;SAChC,MAAM;UACLf,KAAK,CAAC,iCAAiC,CAAC;;MAE5C,CAAC,CAAC;;EAER;CACD;AAlEYtB,SAAS,GAAAsC,UAAA,EALrBvC,SAAS,CAAC;EACTwC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,mBAAmB;EAChCC,SAAS,EAAE,CAAC,mBAAmB;CAChC,CAAC,C,EACWzC,SAAS,CAkErB"},"metadata":{},"sourceType":"module","externalDependencies":[]}